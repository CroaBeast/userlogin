name: CI

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Initialize Maven
        run: mvn initialize

      - name: Build with Maven
        run: mvn -B --no-transfer-progress package

      - name: Set Outputs
        id: variables
        run: |
          echo "::set-output name=artifact_id::$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"
          echo "::set-output name=tag_name::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          echo "::set-output name=short_sha::$(git rev-parse --short ${{ github.event.after }})"
          echo "::set-output name=commits::$(git log --pretty=format:"%s" ${{ github.event.before }}..${{ github.event.after }})"
          echo "::set-output name=branch::$(${GITHUB_REF#refs/heads/})"

      - name: Release Development Build
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.variables.outputs.tag_name }}-SNAPSHOT-${{ steps.variables.outputs.short_sha }}
          release_name: Build ${{ steps.variables.outputs.branch }}-${{ steps.variables.outputs.short_sha }}
          body: |
            ## Commits
            ${{ join(github.event.commits.*.message, "\n") }}

      - name: Upload Plugin Jar to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ steps.variables.outputs.artifact_id }}-${{ steps.variables.outputs.tag_name }}.jar
          asset_name: ${{ steps.variables.outputs.artifact_id }}.jar
          asset_content_type: application/java-archive
